/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package XML;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import static javax.xml.xpath.XPathConstants.NODE;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author namph
 */
public class QuanLyNhanVien extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyNhanVien
     */
    DocumentBuilderFactory dbf;
    DocumentBuilder db;
    Document doc;
    String ten_file = "src/XML/congty.xml";
    ArrayList<NhanVien> nvList;
    DefaultTableModel dfModel;

    private void hienThi() {
        try {

            try {
                dbf = DocumentBuilderFactory.newInstance();
                db = dbf.newDocumentBuilder();
                doc = db.parse(ten_file);

                NodeList nlNhanVien = doc.getElementsByTagName("nhanvien");
                NodeList nlTenNV = doc.getElementsByTagName("hoten");
                NodeList nlLuong = doc.getElementsByTagName("luong");
                NodeList nlTenPhong = doc.getElementsByTagName("tenphong");
                NodeList nlDienThoai = doc.getElementsByTagName("dienthoai");

                nvList = new ArrayList<>();

                for (int i = 0; i < nlNhanVien.getLength(); i++) {
                    NhanVien nv = new NhanVien();
                    nv.setMaNV(nlNhanVien.item(i).getAttributes().getNamedItem("manv").getNodeValue());
                    nv.setTenNV(nlTenNV.item(i).getTextContent());
                    nv.setLuong(nlLuong.item(i).getTextContent());
                    nv.setTenPhong(nlTenPhong.item(i).getTextContent());
                    nv.setSDT(nlDienThoai.item(i).getTextContent());

                    nvList.add(nv);
                }

                dfModel = new DefaultTableModel();

                dfModel.setColumnCount(0);
                dfModel.setRowCount(0);

                dfModel.addColumn("Mã NV");
                dfModel.addColumn("Tên NV");
                dfModel.addColumn("Lương");
                dfModel.addColumn("Phòng");
                dfModel.addColumn("Điện thoại");

                for (NhanVien nv : nvList) {
                    Vector v = new Vector();
                    v.add(nv.getMaNV());
                    v.add(nv.getTenNV());
                    v.add(nv.getLuong());
                    v.add(nv.getTenPhong());
                    v.add(nv.getSDT());

                    dfModel.addRow(v);
                }

                m_bangThongTin.setModel(dfModel);

            } catch (SAXException | IOException ex) {
                Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public QuanLyNhanVien() {
        initComponents();
        setLocationRelativeTo(null);
        hienThi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        m_txtMaNV = new javax.swing.JTextField();
        m_txtLuong = new javax.swing.JTextField();
        m_txtTenNV = new javax.swing.JTextField();
        m_txtPhong = new javax.swing.JTextField();
        m_txtDienThoai = new javax.swing.JTextField();
        m_btnThem = new javax.swing.JButton();
        m_btnSua = new javax.swing.JButton();
        m_btnXoa = new javax.swing.JButton();
        m_btnThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        m_bangThongTin = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Mã NV");

        jLabel2.setText("Lương");

        jLabel3.setText("Tên NV");

        jLabel4.setText("Phòng");

        jLabel5.setText("Điện thoại");

        m_btnThem.setText("Thêm");
        m_btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_btnThemActionPerformed(evt);
            }
        });

        m_btnSua.setText("Sửa");
        m_btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_btnSuaActionPerformed(evt);
            }
        });

        m_btnXoa.setText("Xóa");
        m_btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_btnXoaActionPerformed(evt);
            }
        });

        m_btnThoat.setText("Thoát");
        m_btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_btnThoatActionPerformed(evt);
            }
        });

        m_bangThongTin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        m_bangThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m_bangThongTinMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(m_bangThongTin);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(m_btnXoa)
                        .addGap(54, 54, 54)
                        .addComponent(m_btnThoat))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(m_btnThem)
                                .addGap(68, 68, 68)
                                .addComponent(m_btnSua))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(m_txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(m_txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(m_txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(m_txtPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(m_txtDienThoai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(m_txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_txtPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(m_txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_btnThem)
                    .addComponent(m_btnSua)
                    .addComponent(m_btnXoa)
                    .addComponent(m_btnThoat))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_btnThemActionPerformed
        // TODO add your handling code here:
        String maNV, tenNV, luong, tenPhong, dienThoai;
        maNV = m_txtMaNV.getText();
        tenNV = m_txtTenNV.getText();
        luong = m_txtLuong.getText();
        tenPhong = m_txtPhong.getText();
        dienThoai = m_txtDienThoai.getText();

        if (!daDayDuThongTin(maNV, tenNV, luong, tenPhong, dienThoai)) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            if (daTrungMaNV(maNV)) {
                JOptionPane.showMessageDialog(this, "Trùng mã nhân viên", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                NhanVien nv = new NhanVien(maNV, tenNV, luong, tenPhong, dienThoai);

                Element congty = doc.getDocumentElement();
                themNhanVien(doc, congty, nv);
                ghiFile();
                JOptionPane.showMessageDialog(this, "Thêm thành công", "Information", JOptionPane.INFORMATION_MESSAGE);
                xoaTextBox();
                hienThi();
            }
        }
    }//GEN-LAST:event_m_btnThemActionPerformed

    private void m_btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_btnThoatActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_m_btnThoatActionPerformed

    private void m_btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_btnSuaActionPerformed
        try {
            String maNV, tenNV, luong, tenPhong, dienThoai, duongDan;
            maNV = m_txtMaNV.getText();
            tenNV = m_txtTenNV.getText();
            luong = m_txtLuong.getText();
            tenPhong = m_txtPhong.getText();
            dienThoai = m_txtDienThoai.getText();

            if (maNV.trim().isEmpty() || !daTrungMaNV(maNV)) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên không hợp lê", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                duongDan = "congty/nhanvien[@manv='" + maNV + "']";
                XPathFactory xpf = XPathFactory.newInstance();
                XPath xp = xpf.newXPath();
                Node chon = (Node) xp.evaluate(duongDan, doc, XPathConstants.NODE);
                NodeList nlNhanVien = chon.getChildNodes();
                NodeList nlPhong = nlNhanVien.item(5).getChildNodes();

                nlNhanVien.item(1).setTextContent(tenNV);
                nlNhanVien.item(3).setTextContent(luong);
                nlPhong.item(1).setTextContent(tenPhong);
                nlPhong.item(3).setTextContent(dienThoai);

                ghiFile();
                hienThi();
            }

        } catch (XPathExpressionException ex) {
            Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_m_btnSuaActionPerformed

    private void m_bangThongTinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m_bangThongTinMouseClicked
        // TODO add your handling code here:
        int hangChon = m_bangThongTin.getSelectedRow();
        String maNV, tenNV, luong, tenPhong, dienThoai;
        maNV = (String) m_bangThongTin.getValueAt(hangChon, 0);
        tenNV = (String) m_bangThongTin.getValueAt(hangChon, 1);
        luong = (String) m_bangThongTin.getValueAt(hangChon, 2);
        tenPhong = (String) m_bangThongTin.getValueAt(hangChon, 3);
        dienThoai = (String) m_bangThongTin.getValueAt(hangChon, 4);

        m_txtMaNV.setText(maNV);
        m_txtTenNV.setText(tenNV);
        m_txtLuong.setText(luong);
        m_txtPhong.setText(tenPhong);
        m_txtDienThoai.setText(dienThoai);
    }//GEN-LAST:event_m_bangThongTinMouseClicked

    private void m_btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_btnXoaActionPerformed
        // TODO add your handling code here:
        String maNV, duongDan;
        maNV = m_txtMaNV.getText();
        if (maNV.trim().isEmpty() || !daTrungMaNV(maNV)) {
            JOptionPane.showMessageDialog(this, "Mã nhân viên không hợp lê", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                int result;
                duongDan = "congty/nhanvien[@manv='" + maNV + "']";
                XPathFactory xpf = XPathFactory.newInstance();
                XPath xp = xpf.newXPath();
                Node chon = (Node) xp.evaluate(duongDan, doc, XPathConstants.NODE);
                Node cha = chon.getParentNode();
                result = JOptionPane.showConfirmDialog(this, "Bạn có chắc không?", "Confirm", JOptionPane.YES_NO_OPTION);
                if(result == 0) {
                    cha.removeChild(chon);
                    ghiFile();
                    JOptionPane.showMessageDialog(this, "Xoá thành công", "Information", JOptionPane.INFORMATION_MESSAGE);
                    xoaTextBox();
                    hienThi();
               }
                
            } catch (XPathExpressionException ex) {
                Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_m_btnXoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyNhanVien().setVisible(true);
            }
        });
    }

    private boolean daDayDuThongTin(String maNV, String tenNV, String luong, String tenPhong, String dienThoai) {
        boolean daDayDu = true;
        if (maNV.trim().isEmpty() || tenNV.trim().isEmpty()) {
            daDayDu = false;
        } else if (luong.trim().isEmpty() || tenPhong.trim().isEmpty() || dienThoai.trim().isEmpty()) {
            daDayDu = false;
        }

        return daDayDu;
    }

    private boolean daTrungMaNV(String maNV) {
        boolean daTrung = false;
        for (NhanVien nv : nvList) {
            if (nv.getMaNV().compareToIgnoreCase(maNV) == 0) {
                daTrung = true;
                break;
            }

        }

        return daTrung;
    }

    private void themNhanVien(Document doc, Element CongTy, NhanVien nv) {
        Element NhanVien = doc.createElement("nhanvien");

        Element TenNV = doc.createElement("hoten");
        TenNV.setTextContent(nv.getTenNV());
        Element Luong = doc.createElement("luong");
        Luong.setTextContent(nv.getLuong());
        Element PhongBan = doc.createElement("phongban");
        Element TenPhong = doc.createElement("tenphong");
        TenPhong.setTextContent(nv.getTenPhong());
        Element DienThoai = doc.createElement("dienthoai");
        DienThoai.setTextContent(nv.getSDT());

        PhongBan.appendChild(TenPhong);
        PhongBan.appendChild(DienThoai);

        NhanVien.setAttribute("manv", nv.getMaNV());
        NhanVien.appendChild(TenNV);
        NhanVien.appendChild(Luong);
        NhanVien.appendChild(PhongBan);

        CongTy.appendChild(NhanVien);
    }

    private void ghiFile() {
        TransformerFactory tff = TransformerFactory.newInstance();
        try {
            Transformer tf = tff.newTransformer();
            tf.setOutputProperty(OutputKeys.INDENT, "yes");
            tf.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "3");
            DOMSource source = new DOMSource(doc);
            StreamResult result = new StreamResult("src/XML/congty.xml");
            tf.transform(source, result);
            System.out.println("Ghi file thanh cong!!!");

        } catch (TransformerConfigurationException ex) {
            Logger.getLogger(TaoFileXML.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(TaoFileXML.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void xoaTextBox() {
        m_txtMaNV.setText("");
        m_txtTenNV.setText("");
        m_txtLuong.setText("");
        m_txtPhong.setText("");
        m_txtDienThoai.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable m_bangThongTin;
    private javax.swing.JButton m_btnSua;
    private javax.swing.JButton m_btnThem;
    private javax.swing.JButton m_btnThoat;
    private javax.swing.JButton m_btnXoa;
    private javax.swing.JTextField m_txtDienThoai;
    private javax.swing.JTextField m_txtLuong;
    private javax.swing.JTextField m_txtMaNV;
    private javax.swing.JTextField m_txtPhong;
    private javax.swing.JTextField m_txtTenNV;
    // End of variables declaration//GEN-END:variables
}
